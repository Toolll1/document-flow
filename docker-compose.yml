services:

  document-flow:
    build: ./
    image: document-flow
    container_name: document-flow
    ports:
      - "8080:8080"
      - "5005:5005"
    depends_on:
      - document-flow-db
      - minio
    environment:
      - DB_NAME=document-flow
      - USER=root
      - PASSWORD=root
      - DB_HOST=db
      - DB_PORT=5432
      - JAVA_TOOL_OPTIONS= "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    networks:
      - minio_net

  document-flow-db:
    image: postgres:14-alpine
    container_name: document-flow-db
    ports:
      - "6541:5432"
    environment:
      - POSTGRES_DB=document-flow
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9090"
    restart: always
    ports:
      - 9000:9000
      - 9090:9090
    volumes:
      - ~/minio/data:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=Secure123$
    networks:
      - minio_net

  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    networks:
      - minio_net
    ports:
      - 2181:2181

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    networks:
      - minio_net
    ports:
      - 9092:9092
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

networks:
  minio_net:
    driver: bridge